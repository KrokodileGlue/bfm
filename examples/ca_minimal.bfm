define WIDTH 81;

macro rule90 (l, r, nl, nr, result)
	if l
		if nr
			result = 1;
		end
	end
	if nl
		if r
			result = 1;
		end
	end
end

macro get_neighbors (field, i, left, right)
	var l     var r
	l = i     r = i
	l - 1;    r + 1;

	var t
	t = i     t == 0;
	if t      l = WIDTH - 1;     end
	
	t = i     t == WIDTH - 1;
	if t      r = 0;             end

	left = field[l]     right = field[r]
end

macro update_cell (field, i, result)
	var left           var right
	var not_left       var not_right

	get_neighbors (field, i, left, right)

	not_left   = left      not not_left
	not_right  = right     not not_right

	rule90 (left, right, not_left, not_right, result)
end

macro copy_buffer (field)
	var i          i = WIDTH;
	while i
		i - 1;
		
		var idx     idx = i     idx + WIDTH;
		field[i] = field[idx]
	end
end

macro print_field (field)
	var f            f = 1;
	var i            i = 0;
	while f
		var t    t = field[i]
		
		if t     print "#"     end     not t /* else */
		if t     print " "     end
		
		/* while (i != WIDTH) */
		i + 1;
		f = i     f == WIDTH;     not f
	end
	print "\n"
end

macro update (field)
	var i          i = WIDTH;
	while i
		i - 1;

		var result          result = 0;
		update_cell (field, i, result)

		var idx     idx = i     idx + WIDTH;
		field[idx] = result
	end
end

macro run (field)
	var f          f = 1;
	while f
		copy_buffer (field)
		print_field (field)
		update (field)
	end
end

macro main ()
	array field (WIDTH * 2);
	field[WIDTH + WIDTH / 2] = 1; // initial condition

	run (field)
end

main ()
